#!/bin/bash

clear
echo "========================================="
echo "    Domain Setup Script"
echo "========================================="
echo ""

# Get domain name for setup
read -p "Enter your domain name: " DOMAIN
if [ -z "$DOMAIN" ]; then
    echo "Error: Domain name required!"
    exit 1
fi

echo ""
echo "Setting up $DOMAIN..."

# Update and install packages
sudo apt update -qq
sudo apt install -y apache2 certbot python3-certbot-apache dig

# Enable Apache modules
sudo a2enmod rewrite ssl

# Create web directory
WEB_ROOT="/var/www/$DOMAIN"
sudo mkdir -p "$WEB_ROOT"
sudo chown -R www-data:www-data "$WEB_ROOT"
sudo chmod -R 755 "$WEB_ROOT"

# Create sample page
sudo tee "$WEB_ROOT/index.html" > /dev/null <<EOT
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Welcome to $DOMAIN</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f4f4f4; }
        .container { background: white; padding: 40px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); max-width: 600px; margin: 0 auto; }
        h1 { color: #333; text-align: center; }
        .status { background: #e8f5e8; padding: 15px; border-radius: 5px; margin: 20px 0; text-align: center; }
        .info { background: #f0f8ff; padding: 15px; border-radius: 5px; margin: 20px 0; }
    </style>
</head>
<body>
    <div class="container">
        <h1>🎉 Welcome to $DOMAIN</h1>
        <div class="status">
            <strong>✅ Your website is live and secure!</strong>
        </div>
        <div class="info">
            <p><strong>Domain:</strong> $DOMAIN</p>
            <p><strong>Status:</strong> Active with SSL certificate</p>
            <p><strong>Server:</strong> Apache on Ubuntu</p>
        </div>
        <p>Your website is now ready for content. You can upload your files to replace this page.</p>
        <hr>
        <small>Generated by Domain Setup Script</small>
    </div>
</body>
</html>
EOT

# Create Apache config
sudo tee "/etc/apache2/sites-available/$DOMAIN.conf" > /dev/null <<EOT
<VirtualHost *:80>
    ServerName $DOMAIN
    ServerAlias www.$DOMAIN
    DocumentRoot $WEB_ROOT
    DirectoryIndex index.html index.php
    <Directory $WEB_ROOT>
        Options -Indexes +FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
    ErrorLog \${APACHE_LOG_DIR}/$DOMAIN-error.log
    CustomLog \${APACHE_LOG_DIR}/$DOMAIN-access.log combined
</VirtualHost>
EOT

# Enable site
sudo a2ensite "$DOMAIN.conf"
sudo systemctl reload apache2

echo "✅ Domain created: http://$DOMAIN"

# Check DNS and setup SSL
SERVER_IP=$(curl -4 -s ifconfig.me)
DOMAIN_IP=$(dig +short A $DOMAIN | head -1)

echo ""
echo "Checking SSL setup..."
echo "Server IP: $SERVER_IP"
echo "Domain IP: $DOMAIN_IP"

# Check for potentially conflicting sites
echo ""
echo "Checking for conflicting sites..."

# Group sites by domain (combine HTTP and SSL versions)
DOMAIN_GROUPS=()
SITE_FILES=()

for site in /etc/apache2/sites-enabled/*.conf; do
    if [ -f "$site" ]; then
        site_name=$(basename "$site")
        # Skip the domain we're setting up
        if [ "$site_name" != "$DOMAIN.conf" ] && [ "$site_name" != "$DOMAIN-le-ssl.conf" ]; then
            # Extract domain name (remove .conf and -le-ssl suffix)
            domain_name=$(echo "$site_name" | sed 's/-le-ssl\.conf$//' | sed 's/\.conf$//')
            
            # Check if this domain is already in our list
            found=false
            for existing_domain in "${DOMAIN_GROUPS[@]}"; do
                if [ "$existing_domain" = "$domain_name" ]; then
                    found=true
                    break
                fi
            done
            
            if [ "$found" = false ]; then
                DOMAIN_GROUPS+=("$domain_name")
            fi
        fi
    fi
done

SITES_TO_DISABLE=()
if [ ${#DOMAIN_GROUPS[@]} -gt 0 ]; then
    echo ""
    echo "Found existing domains that might interfere with SSL setup:"
    for i in "${!DOMAIN_GROUPS[@]}"; do
        echo "$((i+1))) ${DOMAIN_GROUPS[i]}"
    done
    echo "$((${#DOMAIN_GROUPS[@]}+1))) Disable ALL domains"
    echo "$((${#DOMAIN_GROUPS[@]}+2))) Continue without disabling any sites"
    echo ""
    read -p "Select domains to temporarily disable (e.g., 1 2) or press Enter to skip: " DISABLE_CHOICE
    
    if [ ! -z "$DISABLE_CHOICE" ]; then
        # Check if user wants to disable all
        if [ "$DISABLE_CHOICE" = "$((${#DOMAIN_GROUPS[@]}+1))" ]; then
            echo "Disabling all domains..."
            for domain in "${DOMAIN_GROUPS[@]}"; do
                SITES_TO_DISABLE+=("$domain.conf")
                SITES_TO_DISABLE+=("$domain-le-ssl.conf")
            done
        else
            # Process individual selections
            for num in $DISABLE_CHOICE; do
                if [[ "$num" =~ ^[0-9]+$ ]] && [ "$num" -ge 1 ] && [ "$num" -le ${#DOMAIN_GROUPS[@]} ]; then
                    selected_domain="${DOMAIN_GROUPS[$((num-1))]}"
                    # Add both HTTP and SSL versions of the domain to disable list
                    SITES_TO_DISABLE+=("$selected_domain.conf")
                    SITES_TO_DISABLE+=("$selected_domain-le-ssl.conf")
                fi
            done
        fi
    fi
fi

# Disable selected sites
if [ ${#SITES_TO_DISABLE[@]} -gt 0 ]; then
    echo ""
    echo "Temporarily disabling selected sites..."
    for site in "${SITES_TO_DISABLE[@]}"; do
        echo "Disabling $site"
        sudo a2dissite "$site" 2>/dev/null || true
    done
    sudo systemctl reload apache2
    sleep 2
fi

# Try SSL certificate
echo ""
echo "Requesting SSL certificate..."
if sudo certbot --apache -d "$DOMAIN" -d "www.$DOMAIN" --agree-tos --email "admin@$DOMAIN" --non-interactive --quiet; then
    echo "✅ SSL certificate obtained!"
    HTTPS_URL="https://$DOMAIN"
elif sudo certbot --apache -d "$DOMAIN" --agree-tos --email "admin@$DOMAIN" --non-interactive --quiet; then
    echo "✅ SSL certificate obtained (main domain only)!"
    HTTPS_URL="https://$DOMAIN"
else
    echo "⚠️  SSL failed - using HTTP only"
    HTTPS_URL="http://$DOMAIN"
fi

# Re-enable previously disabled sites
if [ ${#SITES_TO_DISABLE[@]} -gt 0 ]; then
    echo ""
    echo "Re-enabling previously disabled sites..."
    for site in "${SITES_TO_DISABLE[@]}"; do
        echo "Re-enabling $site"
        sudo a2ensite "$site" 2>/dev/null || true
    done
    sudo systemctl reload apache2
fi

echo ""
echo "========================================="
echo "✅ SETUP COMPLETE!"
echo "========================================="
echo "Your website: $HTTPS_URL"
echo "Web files: $WEB_ROOT"
echo ""
if [[ "$HTTPS_URL" == "http://"* ]]; then
    echo "Note: SSL failed. Check DNS points to $SERVER_IP"
fi